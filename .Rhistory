PlayerInfo <- People |>
filter(
playerID %in% c(
"ruthba01", "aaronha01", "bondsba01", "rodrial01"
)
) |>
mutate(
mlb_birthyear = if_else(
birthMonth >= 7, birthYear + 1, birthYear
),
Player = paste(nameFirst, nameLast)
) |>
select(playerID, Player, mlb_birthyear)
# join to batting info, using adjusted year to compute age the way MLB does it
HR_data <- Batting |>
inner_join(PlayerInfo, by = "playerID") |>
mutate(Age = yearID - mlb_birthyear) |>
select(Player, Age, HR) |>
group_by(Player) |>
mutate(cHR = cumsum(HR))
ggplot(HR_data, aes(x = Age, y = cHR, color = Player)) +
geom_line() +
scale_color_manual(values = crc_fc)
crc_fc <- c("#2905a1" "#e41a1c" "#4daf4a" "#984ea3")
crc_fc <- c("#2905a1", "#e41a1c", "#4daf4a" ,"#984ea3")
ggplot(HR_data, aes(x = Age, y = cHR, color = Player)) +
geom_line() +
scale_color_manual(values = crc_fc)
# 1998 home run race
retro1998 <- read_rds(here::here("data/retro1998.rds"))
install.packages("here")
# 1998 home run race
retro1998 <- read_rds(here::here("data/retro1998.rds"))
hofpitching <- hofpitching |>
mutate(
BF_group = cut(
BF,
c(0, 10000, 15000, 20000, 30000),
labels = c("Less than 10000", "(10000, 15000)",
"(15000, 20000)", "more than 20000")
)
)
hof_pitching <- hof_pitching |>
mutate(
BF_group = cut(
BF,
c(0, 10000, 15000, 20000, 30000),
labels = c("Less than 10000", "(10000, 15000)",
"(15000, 20000)", "more than 20000")
)
)
View(hof_pitching)
summarize(hof_pitching$BF_group)
summarize(hof_pitching)
summarize(hof_pitching |> select(BF_group))
hof_pitching |>
group_by(BF_group) |>
summarize(N = n())
ggplot(data = bf_counts) + geom_hist(aes(x = N))
bf_counts <- hof_pitching |>
group_by(BF_group) |>
summarize(N = n())
ggplot(data = bf_counts) + geom_hist(aes(x = N))
ggplot(data = bf_counts) + geom_bar(aes(x = N))
ggplot(data = bf_counts, aes(x=BF_group) + geom_bar()
ggplot(data = bf_counts, aes(x=BF_group) + geom_bar()
ggplot(bf_counts, aes(x=BF_group) + geom_bar()
0
ggplot(bf_counts, aes(x=BF_group)) + geom_bar()
ggplot(bf_counts, aes(x=BF_group)) + geom_bar()
bf_counts
bf_counts <- hof_pitching |>
group_by(BF_group) |>
summarize(N = n())
ggplot(bf_counts, aes(x = BF_group)) + geom_bar()
ggplot(bf_counts, aes(x = BF_group)) + geom_bar()
ggplot(hof_pitching, aes(x = BF_group)) + geom_bar()
ggplot(hof_pitching, aes(x = WAR)) + geom_bar()
ggplot(hof_pitching, aes(x = WAR)) + geom_histogram()
hof_pitching |>
filter(WAR > 120)
View(hof_pitching)
hof_pitching |>
filter(WAR > 120) |> select("..2")
hof_pitching |>
filter(WAR > 120) |> select("...2")
hof_pitching <- hof_pitching |>
mutate(WAR_Season = WAR / Yrs)
ggplot(hof_pitching, aes(x = WAR_Season, y= BF_group)) + geom_jitter()
ggplot(hof_pitching, aes(x = WAR_Season, y= BF_group)) + geom_jitter(height=.1)
ggplot(hof_pitching, aes(x = WAR_Season, y= BF_group)) + geom_boxplot(color = "brown", fill = "orange")
hofpitching <- hofpitching |>
mutate(MidYear = (From + To) / 2)
hof_pitching <- hof_pitching |>
mutate(MidYear = (From + To) / 2)
hof_pitching.recent <- hof_pitching |>
filter(MidYear >= 1960)
hof_pitching.recent |> arrange(WAR_Season)
hof_pitching.recent |> arrange(desc(WAR_Season))
geom_dotplot()
hof_pitching.recent <- hof_pitching.recent |> arrange(desc(WAR_Season)
hof_pitching.recent <- hof_pitching.recent |> arrange(desc(WAR_Season))
hof_pitching.recent <- hof_pitching |>
filter(MidYear >= 1960)
hof_pitching.recent <- hof_pitching.recent |> arrange(desc(WAR_Season))
ggplot(hof_pitching.recent, aes(x=WAR_season, y="...2")) +
geom_dotplot()
ggplot(hof_pitching.recent, aes(x=WAR_Season, y="...2")) +
geom_dotplot()
ggplot(hof_pitching.recent, aes(x=WAR_Season, y=...2)) +
geom_dotplot()
hof_pitching.recent <- hof_pitching.recent |> arrange(desc(WAR_Season))
View(hof_pitching.recent)
ggplot(hof_pitching.recent, aes(x=WAR_Season, y=...2)) +
geom_dotplot()
ggplot(hof_pitching.recent, aes(x=WAR_Season, y=...2)) +
geom_point(color = "blue")
View(hof_pitching.recent)
ggplot(hof_pitching.recent, aes(y=WAR_Season, x=...2)) +
geom_point(color = "blue")
ggplot(hof_pitching.recent, aes(y=WAR_Season, x=...2)) +
geom_point(color = "blue") + coord_flip()
ggplot(hof_pitching.recent, aes(x=WAR_Season, y=...2)) +
geom_point(color = "blue")
?aes
?ggplot
# Exercise 5
ggplot(hof_pitching, aes(x = MidYear, y= WAR_Season)) + geom_point()
# Exercise 5
ggplot(hof_pitching, aes(x = MidYear, y= WAR_Season)) + geom_point() + geom_smooth()
Teams <- Teams  |>
mutate(win_pct = W / (W + L))
View(Teams)
Teams <- Teams  |>
mutate(win_pct = W / (W + L)) |>
filter(yearID == 2022)
View(Teams)
ggplot(Teams, aes(x= ERA, y = win_pct)) + geom_point()
install.packages("mlbplotR")
ggplot(Teams, aes(x= ERA, y = win_pct)) + geom_point() +
geom_mlb_scoreboard_logos()
library(mlbplotR)
ggplot(Teams, aes(x= ERA, y = win_pct)) + geom_point() +
geom_mlb_scoreboard_logos()
ggplot(Teams, aes(x= ERA, y = win_pct, team_abbr = teamID)) + geom_point() +
geom_mlb_scoreboard_logos()
? geom_mlb_scoreboard_logos
valid_team_names()
valid_team_names(Teams$teamID)
?valid_team_names
Teams$teamID
ggplot(Teams, aes(x= ERA, y = win_pct, team_abbr = teamID)) + geom_point() +
geom_mlb_scoreboard_logos()
team_mapping <- c(
CHA = "CWS",
CHN = "CHC",
KCA = "KC",
NYA = "NYY",
NYN = "NYM",
TBA = "TB",
SLN = "STL",
SFN = "SF",
LAN = "LAD",
WAS = "WSH",
ARI = "AZ"
)
# Apply recoding
Teams <- Teams |>
mutate(teamID = recode(as.character(teamID), !!!team_mapping))
ggplot(Teams, aes(x= ERA, y = win_pct, team_abbr = teamID)) + geom_point() +
geom_mlb_scoreboard_logos()
valid_team_names()
team_mapping <- c(
CHA = "CWS",
CHN = "CHC",
KCA = "KC",
NYA = "NYY",
NYN = "NYM",
TBA = "TB",
SLN = "STL",
SDN = "SD",
SFN = "SF",
LAN = "LAD",
WAS = "WSH",
ARI = "AZ"
)
# Apply recoding
Teams <- Teams |>
mutate(teamID = recode(as.character(teamID), !!!team_mapping))
ggplot(Teams, aes(x= ERA, y = win_pct, team_abbr = teamID)) + geom_point() +
geom_mlb_scoreboard_logos()
?? geom_mlb_scoreboard_logos
ggplot(Teams, aes(x= ERA, y = win_pct, team_abbr = teamID)) + geom_point() +
geom_mlb_scoreboard_logos(width = .05)
Teams <- Teams  |>
mutate(win_pct = W / (W + L)) |>
filter(yearID == 2024)
team_mapping <- c(
CHA = "CWS",
CHN = "CHC",
KCA = "KC",
NYA = "NYY",
NYN = "NYM",
TBA = "TB",
SLN = "STL",
SDN = "SD",
SFN = "SF",
LAN = "LAD",
WAS = "WSH",
ARI = "AZ"
)
# Apply recoding
Teams <- Teams |>
mutate(teamID = recode(as.character(teamID), !!!team_mapping))
ggplot(Teams, aes(x= ERA, y = win_pct, team_abbr = teamID)) + geom_point() +
geom_mlb_scoreboard_logos(width = .05)
# Exercise 7
data(Teams)
Teams <- Teams  |>
mutate(win_pct = W / (W + L)) |>
filter(yearID == 2024)
# Exercise 7
data(Teams)
Teams <- Teams  |>
mutate(win_pct = W / (W + L)) |>
filter(yearID == 2023)
team_mapping <- c(
CHA = "CWS",
CHN = "CHC",
KCA = "KC",
NYA = "NYY",
NYN = "NYM",
TBA = "TB",
SLN = "STL",
SDN = "SD",
SFN = "SF",
LAN = "LAD",
WAS = "WSH",
ARI = "AZ"
)
# Apply recoding
Teams <- Teams |>
mutate(teamID = recode(as.character(teamID), !!!team_mapping))
ggplot(Teams, aes(x= ERA, y = win_pct, team_abbr = teamID)) + geom_point() +
geom_mlb_scoreboard_logos(width = .05)
library(tidyverse)
library(abdwr3edata)
library(Lahman)
my_teams <- Teams |>
filter(yearID > 2000, yearID != 2020) |>
select(teamID, yearID, lgID, G, W, L, R, RA)
my_teams |>
slice_tail(n = 6)
my_teams <- my_teams |>
mutate(RD = R - RA, Wpct = W / (W + L))
my_teams <- my_teams |>
mutate(residuals_pyt = Wpct - Wpct_pyt)
my_teams <- my_teams |>
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
my_teams <- my_teams |>
mutate(residuals_pyt = Wpct - Wpct_pyt)
my_teams |>
summarize(rmse = sqrt(mean(residuals_pyt^2)))
my_teams <- Teams |>
filter(yearID >= 1800, yearID < 1900) |>
select(teamID, yearID, lgID, G, W, L, R, RA)
my_teams |>
slice_tail(n = 6)
my_teams <- my_teams |>
mutate(RD = R - RA, Wpct = W / (W + L))
run_diff <- ggplot(my_teams, aes(x = RD, y = Wpct)) +
geom_point() +
scale_x_continuous("Run differential") +
scale_y_continuous("Winning percentage")
run_diff <- ggplot(my_teams, aes(x = RD, y = Wpct)) +
geom_point() +
scale_x_continuous("Run differential") +
scale_y_continuous("Winning percentage")
ggplot(my_teams, aes(x = RD, y = Wpct)) +
geom_point() +
scale_x_continuous("Run differential") +
scale_y_continuous("Winning percentage")
my_teams <- my_teams |>
mutate(
logWratio = log(W / L),
logRratio = log(R / RA)
)
pytFit <- lm(logWratio ~ 0 + logRratio, data = my_teams)
View(my_teams)
# Some teams won no games at all ??
my_teams <- my_teams |> filter(W != 0)
# fit
pytFit <- lm(logWratio ~ 0 + logRratio, data = my_teams)
pytFit
# compute residuals
exp = pytFit$logRatio
pytFit
coef(pytFit)
coef(pytFit)$logRratio
coef(pytFit)*33
exp = coef(pytFit)
my_teams <- my_teams |>
mutate(Wpct_pyt = R ^ exp / (R ^ exp + RA ^ exp)) |>
mutate(residuals_pyt = Wpct - Wpct_pyt)
library(ggrepel)
base_plot <- ggplot(my_teams, aes(x = RD, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Run differential") + ylab("Residual")
highlight_teams <- my_teams |>
arrange(desc(abs(residuals_pyt))) |>
slice_head(n = 6)
library(ggrepel)
base_plot +
geom_point(data = highlight_teams, color = crcblue) +
geom_text_repel(
data = highlight_teams, color = crcblue,
aes(label = paste(teamID, yearID))
)
base_plot +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
base_plot <- ggplot(my_teams, aes(x = RD, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Run differential") + ylab("Residual")
highlight_teams <- my_teams |>
arrange(desc(abs(residuals_pyt))) |>
slice_head(n = 8)
library(ggrepel)
base_plot +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
?slice_head
arrange(desc(abs(residuals_pyt)))
arrange(desc(abs(my_teams$residuals_pyt)))
highlight_teams <- my_teams |>
arrange(desc(abs(residuals_pyt)))
library(tidyverse)
library(abdwr3edata)
library(Lahman)
# 19th century teams
my_teams <- Teams |>
filter(yearID >= 1800, yearID < 1900) |>
select(teamID, yearID, lgID, G, W, L, R, RA) |>
mutate(RD = R - RA, Wpct = W / (W + L))
my_teams |>
slice_tail(n = 6)
ggplot(my_teams, aes(x = RD, y = Wpct)) +
geom_point() +
scale_x_continuous("Run differential") +
scale_y_continuous("Winning percentage")
# Add logs
my_teams <- my_teams |>
mutate(
logWratio = log(W / L),
logRratio = log(R / RA)
)
# Some teams won no games at all ??
my_teams <- my_teams |> filter(W != 0)
# fit
pytFit <- lm(logWratio ~ 0 + logRratio, data = my_teams)
pytFit
# compute residuals
exp = coef(pytFit)
my_teams <- my_teams |>
mutate(Wpct_pyt = R ^ exp / (R ^ exp + RA ^ exp)) |>
mutate(residuals_pyt = Wpct - Wpct_pyt)
base_plot <- ggplot(my_teams, aes(x = RD, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Run differential") + ylab("Residual")
highlight_teams <- my_teams |>
arrange(desc(abs(residuals_pyt))) |>
slice_head(n = 8)
library(ggrepel)
base_plot +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
View(my_teams)
# Plot vs predicted win percentage:
base_plot2 <- ggplot(my_teams, aes(x = Wpct_pyt, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Run differential") + ylab("Residual")
base_plot2 +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
base_plot2 <- ggplot(my_teams, aes(x = Wpct_pyt, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Predicted Wpct") + ylab("Residual")
base_plot2 +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
base_plot2 <- ggplot(my_teams, aes(x = Wpct, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Predicted Wpct") + ylab("Residual")
base_plot2 +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
# Plot vs predicted win percentage:
base_plot2 <- ggplot(my_teams, aes(x = Wpct_pyt, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Predicted Wpct") + ylab("Residual")
base_plot2 +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
base_plot2 <- ggplot(my_teams, aes(x = Wpct, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Wpct") + ylab("Residual")
base_plot2 +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
#########
# Chapter 4 - exercise 2
library(tidyverse)
library(abdwr3edata)
library(Lahman)
# 19th century teams
my_teams <- Teams |>
filter(yearID >= 1800, yearID < 1900) |>
select(teamID, yearID, lgID, G, W, L, R, RA) |>
mutate(RD = R - RA, Wpct = W / (W + L))
my_teams |>
slice_tail(n = 6)
ggplot(my_teams, aes(x = RD, y = Wpct)) +
geom_point() +
scale_x_continuous("Run differential") +
scale_y_continuous("Winning percentage")
# Add logs
my_teams <- my_teams |>
mutate(
logWratio = log(W / L),
logRratio = log(R / RA)
)
# Some teams won no games at all ??
my_teams <- my_teams |> filter(W != 0)
# fit
pytFit <- lm(logWratio ~ 0 + logRratio, data = my_teams)
pytFit
# compute residuals
exp = coef(pytFit)
my_teams <- my_teams |>
mutate(Wpct_pyt = R ^ exp / (R ^ exp + RA ^ exp)) |>
mutate(residuals_pyt = Wpct - Wpct_pyt)
base_plot <- ggplot(my_teams, aes(x = RD, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Run differential") + ylab("Residual")
highlight_teams <- my_teams |>
arrange(desc(abs(residuals_pyt))) |>
slice_head(n = 8)
library(ggrepel)
base_plot +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
# "By inspecting the residual plot of your fitted model
#from (a), did the great and poor teams in the 19th century
#do better or worse than one would expect on the basis of
#their run differentials?
# I dont see anyone doing much better or worse on the extremes...
# I guess the best did slighlty better then predicted by pythag
# and the worse did slightly worse then predicted by pythag, where
# by best and worse I mean in terms of run differential.
# Plot vs predicted win percentage
# Note that if you plot vs actual win percentage you will
# see patterns, but these are not real. Residuals are not
# in general independant of the response!  See ROS 11.2
base_plot2 <- ggplot(my_teams, aes(x = Wpct_pyt, y = residuals_pyt)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab("Wpct") + ylab("Residual")
base_plot2 +
geom_point(data = highlight_teams, color = "blue") +
geom_text_repel(
data = highlight_teams, color = "blue",
aes(label = paste(teamID, yearID))
)
library(tidyverse)
library(abdwr3edata)
retro2016 <- read_rds(here::here("data/retro2016.rds"))
